module Godot
  # until we have RBS integration
  class ScriptExtension < Object end
  class RubyScript[C < Object] < ScriptExtension
    
    attr_reader klass: singleton(Object)? # https://github.com/ruby/rbs/issues/1542
    def initialize: (?singleton(Object)?) -> void
    
    attr_accessor source_code: String?
    def _get_source_code: () -> String
    alias _set_source_code source_code=
    def _has_source_code: () -> bool
    
    def _get_language: () -> RubyLanguage
    def _is_tool: () -> bool
    
    def _get_global_name: () -> StringName
    def _is_valid: () -> bool
    alias _can_instantiate _is_valid
    def _instance_has: (bot object) -> bool
    
    def _get_base_script: () -> RubyScript[Object]?
    def _get_instance_base_type: () -> StringName
    
    def new: (*variant_like args) -> C
    def _instance_create: (C for_object) -> Object
  end
end
